@{
    ViewData["Title"] = "Complete Appointment";
    var doctorName = ViewData["DoctorName"] as string ?? "Doctor Name";
}

<section class="min-h-screen bg-gray-50 mt-5 flex items-center justify-center px-4">
    <div class="max-w-xl w-full bg-white p-10 rounded-3xl shadow-lg">
        <h1 class="text-3xl font-extrabold text-gray-900 mb-8">
            Complete Appointment with <span class="text-blue-600">@doctorName</span>
        </h1>

        <form id="appointmentForm" method="get" action="#" class="space-y-8" novalidate>
            <div>
                <label for="patientName" class="block text-sm font-semibold text-gray-700 mb-2">Patient Name:</label>
                <input type="text"
                       id="patientName"
                       name="patientName"
                       required
                       aria-required="true"
                       aria-describedby="patientNameHelp"
                       placeholder="Enter your full name"
                       class="w-full rounded-xl border border-gray-300 px-4 py-3 shadow-sm placeholder-gray-400
                           focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
                <p id="patientNameHelp" class="sr-only">Required field</p>
            </div>

            <div>
                <label for="appointmentDate" class="block text-sm font-semibold text-gray-700 mb-2">Appointment Date:</label>
                <input type="text"
                       id="appointmentDate"
                       name="appointmentDate"
                       required
                       aria-required="true"
                       placeholder="Select a date"
                       class="w-full rounded-xl border border-gray-300 px-4 py-3 shadow-sm placeholder-gray-400
                           focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" />
            </div>

            <div>
                <label for="appointmentTime" class="block text-sm font-semibold text-gray-700 mb-2">Appointment Time:</label>
                <select id="appointmentTime"
                        name="appointmentTime"
                        required
                        aria-required="true"
                        class="w-full rounded-xl border border-gray-300 px-4 py-3 shadow-sm
                           focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                    <!-- options populated by JS -->
                </select>
            </div>

            <div>
                <button type="submit"
                        class="w-full py-4 bg-blue-600 text-white rounded-xl shadow-lg
                           hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 transition font-semibold text-lg">
                    Complete Appointment
                </button>
            </div>
        </form>
    </div>
</section>

<!-- Success Modal -->
<div id="successModal"
     class="modal fade fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 opacity-0 pointer-events-none transition-opacity duration-300"
     aria-hidden="true"
     aria-modal="true"
     role="dialog">
    <div class="modal-dialog max-w-sm w-full mx-4">
        <div class="modal-content rounded-2xl shadow-2xl p-8 text-center bg-white transform transition-transform duration-300 scale-90 opacity-0"
             id="modalContent">
            <h2 class="text-2xl font-extrabold text-green-600 mb-4">Appointment Completed</h2>
            <p class="text-gray-700 mb-8 text-base leading-relaxed">
                Your appointment has been successfully completed. Thank you!
            </p>
            <button id="closeModal"
                    type="button"
                    class="inline-block px-6 py-3 bg-blue-600 text-white font-semibold rounded-xl shadow-lg
                       hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-300 transition">
                Close
            </button>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />
    <style>
        /* Modal open styles */
        .modal.show {
            opacity: 1 !important;
            pointer-events: auto !important;
        }

            .modal.show #modalContent {
                opacity: 1 !important;
                transform: scale(1) !important;
            }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const appointmentDate = document.getElementById('appointmentDate');
            const appointmentTime = document.getElementById('appointmentTime');
            const appointmentForm = document.getElementById('appointmentForm');
            const successModalEl = document.getElementById('successModal');
            const closeModalBtn = document.getElementById('closeModal');

            if (!appointmentDate || !appointmentTime || !appointmentForm || !successModalEl || !closeModalBtn) {
                console.warn('One or more required elements are missing.');
                return;
            }

            // Initialize flatpickr
            flatpickr(appointmentDate, {
                dateFormat: 'Y-m-d',
                minDate: 'today',
                disable: [
                    date => date.getDay() === 5 || date.getDay() === 6, // Disable Friday(5) & Saturday(6)
                ],
                disableMobile: true,
            });

            // Populate times 8:00 AM - 6:00 PM every 30 min
            function populateTimes() {
                appointmentTime.innerHTML = '';
                const startHour = 8;
                const endHour = 18;

                for (let hour = startHour; hour <= endHour; hour++) {
                    for (const min of [0, 30]) {
                        if (hour === endHour && min > 0) continue; // No time after 6:00 PM

                        const period = hour >= 12 ? 'PM' : 'AM';
                        const displayHour = hour % 12 || 12;
                        const displayMin = String(min).padStart(2, '0');
                        const valueHour = String(hour).padStart(2, '0');
                        const valueMin = String(min).padStart(2, '0');

                        const option = document.createElement('option');
                        option.value = `${valueHour}:${valueMin}`;
                        option.textContent = `${displayHour}:${displayMin} ${period}`;

                        appointmentTime.appendChild(option);
                    }
                }
            }
            populateTimes();

            // Bootstrap Modal instance management
            let modalInstance = null;

            function showModal() {
                successModalEl.classList.add('show');
                modalInstance = new bootstrap.Modal(successModalEl, {
                    backdrop: 'static',
                    keyboard: false,
                });
                modalInstance.show();

                // Also apply scale/opacity for custom animation
                const modalContent = document.getElementById('modalContent');
                modalContent.classList.add('scale-100', 'opacity-100');
            }

            function hideModal() {
                if (modalInstance) {
                    modalInstance.hide();
                    successModalEl.classList.remove('show');
                    const modalContent = document.getElementById('modalContent');
                    modalContent.classList.remove('scale-100', 'opacity-100');
                }
            }

            // Form submission
            appointmentForm.addEventListener('submit', (e) => {
                e.preventDefault();

                const patientName = document.getElementById('patientName').value.trim();
                const dateValue = appointmentDate.value.trim();
                const timeValue = appointmentTime.value.trim();

                if (!patientName || !dateValue || !timeValue) {
                    alert('Please fill in all required fields.'); // Simple feedback
                    return;
                }

                showModal();

                appointmentForm.reset();
                populateTimes();
            });

            // Close modal button
            closeModalBtn.addEventListener('click', () => {
                hideModal();
            });

            // Optional: close modal on clicking backdrop (outside modal)
            successModalEl.addEventListener('click', (event) => {
                if (event.target === successModalEl) {
                    hideModal();
                }
            });
        });
    </script>
}
